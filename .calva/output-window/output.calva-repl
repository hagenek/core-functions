; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.8.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.25.7"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +midje repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
; Syntax error compiling at (test/clojure_functions/core_test.clj:11:1).
; Unable to resolve symbol: doc in this context
clj꞉clojure-functions.core-test꞉> 
; Syntax error compiling at (test/clojure_functions/core_test.clj:7:1).
; Unable to resolve symbol: facts in this context
clj꞉clojure-functions.core-test꞉> 
; Syntax error compiling at (src/clojure_functions/core.clj:16:1).
; Unable to resolve symbol: my-reduce in this context
clj꞉clojure-functions.core꞉> 
; Evaluating file: core.clj
1
clj꞉clojure-functions.core꞉> 
1
clj꞉clojure-functions.core꞉> 
1
clj꞉clojure-functions.core꞉> 
1
clj꞉clojure-functions.core꞉> 
1
clj꞉clojure-functions.core꞉> 
1
clj꞉clojure-functions.core꞉> 
1
clj꞉clojure-functions.core꞉> 
#'clojure-functions.core/my-reduce
clj꞉clojure-functions.core꞉> 
2
clj꞉clojure-functions.core꞉> 
